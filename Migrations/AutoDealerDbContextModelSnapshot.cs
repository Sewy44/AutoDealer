// <auto-generated />
using System;
using AutoDealer.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoDealer.Migrations
{
    [DbContext(typeof(AutoDealerDbContext))]
    partial class AutoDealerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoDealer.Models.ContactRequest", b =>
                {
                    b.Property<Guid>("ContactRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateContactRequested")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleRequestedVehicleVIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VehicleVIN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactRequestId");

                    b.HasIndex("VehicleRequestedVehicleVIN");

                    b.ToTable("ContactRequests");
                });

            modelBuilder.Entity("AutoDealer.Models.Customer.CustomerRecord", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddressLineOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLineTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomerRecords");
                });

            modelBuilder.Entity("AutoDealer.Models.Purchase.PurchaseRecord", b =>
                {
                    b.Property<Guid>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("PurchasedVehicleRecordVehicleVIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("PurchasingCustomerCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesRepresentative")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfPurchase")
                        .HasColumnType("int");

                    b.Property<string>("VehicleVIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseId");

                    b.HasIndex("PurchasedVehicleRecordVehicleVIN");

                    b.HasIndex("PurchasingCustomerCustomerId");

                    b.ToTable("PurchaseRecords");
                });

            modelBuilder.Entity("AutoDealer.Models.Special.Special", b =>
                {
                    b.Property<Guid>("SpecialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecialId");

                    b.ToTable("Specials");
                });

            modelBuilder.Entity("AutoDealer.Models.Vehicle", b =>
                {
                    b.Property<string>("VehicleVIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BodyStyle")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentListPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExteriorColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InteriorColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<decimal>("MRSP")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("Mileage")
                        .HasColumnType("decimal(6,0)");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OriginalListPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int?>("Transmission")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleVIN");

                    b.HasIndex("ExteriorColorId");

                    b.HasIndex("InteriorColorId");

                    b.HasIndex("ModelId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("AutoDealer.Models.VehicleComponents.Brand", b =>
                {
                    b.Property<Guid>("BrandNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandNameId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("AutoDealer.Models.VehicleComponents.ExteriorColor", b =>
                {
                    b.Property<Guid>("ExteriorColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExteriorColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExteriorColorId");

                    b.ToTable("ExteriorColors");
                });

            modelBuilder.Entity("AutoDealer.Models.VehicleComponents.InteriorColor", b =>
                {
                    b.Property<Guid>("InteriorColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InteriorColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InteriorColorId");

                    b.ToTable("InteriorColors");
                });

            modelBuilder.Entity("AutoDealer.Models.VehicleComponents.ModelType", b =>
                {
                    b.Property<Guid>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BrandNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BrandNameId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModelId");

                    b.HasIndex("BrandNameId1");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("AutoDealer.Models.ContactRequest", b =>
                {
                    b.HasOne("AutoDealer.Models.Vehicle", "VehicleRequested")
                        .WithMany()
                        .HasForeignKey("VehicleRequestedVehicleVIN");

                    b.Navigation("VehicleRequested");
                });

            modelBuilder.Entity("AutoDealer.Models.Purchase.PurchaseRecord", b =>
                {
                    b.HasOne("AutoDealer.Models.Vehicle", "PurchasedVehicleRecord")
                        .WithMany()
                        .HasForeignKey("PurchasedVehicleRecordVehicleVIN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoDealer.Models.Customer.CustomerRecord", "PurchasingCustomer")
                        .WithMany()
                        .HasForeignKey("PurchasingCustomerCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchasedVehicleRecord");

                    b.Navigation("PurchasingCustomer");
                });

            modelBuilder.Entity("AutoDealer.Models.Vehicle", b =>
                {
                    b.HasOne("AutoDealer.Models.VehicleComponents.ExteriorColor", "ExteriorColor")
                        .WithMany()
                        .HasForeignKey("ExteriorColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoDealer.Models.VehicleComponents.InteriorColor", "InteriorColor")
                        .WithMany()
                        .HasForeignKey("InteriorColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoDealer.Models.VehicleComponents.ModelType", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExteriorColor");

                    b.Navigation("InteriorColor");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("AutoDealer.Models.VehicleComponents.ModelType", b =>
                {
                    b.HasOne("AutoDealer.Models.VehicleComponents.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandNameId1");

                    b.Navigation("Brand");
                });
#pragma warning restore 612, 618
        }
    }
}
